apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "zeppelin.fullname" . }}
  labels:
    app: {{ template "zeppelin.name" . }}
    chart: {{ template "zeppelin.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  health_check.sh: |
{{ include "v3io-configs.script.httpHealthCheckWithJava" . | indent 4 }}

  run.sh : |
    #!/bin/bash
{{- if and .Values.storage.path .Values.storage.initCmd }}
      {{ .Values.storage.initCmd }} {{ .Values.storage.path }}
{{- end }}
{{- if .Values.preloadNotebooks.enabled }}
    for notebook in $(ls /etc/config/zeppelin/notebooks); do
      NOTEBOOKS_PATH={{ default "${ZEPPELIN_HOME}/notebook" .Values.storage.path }}
      hadoop fs -mkdir -p ${NOTEBOOKS_PATH}/$notebook;
      hadoop fs -copyFromLocal /etc/config/zeppelin/notebooks/$notebook ${NOTEBOOKS_PATH}/$notebook/note.json;
    done
{{- end }}
    unset ZEPPELIN_PORT
    unset ZEPPELIN_SSL_PORT

{{- if .Values.spark }}
    echo "spark.master=spark://{{ .Values.spark.hostname }}:{{ .Values.spark.port }}" >> ${SPARK_HOME}/conf/spark-defaults.conf
    echo spark.driver.host=$(hostname -i) >> ${SPARK_HOME}/conf/spark-defaults.conf
    echo spark.executor.cores={{ .Values.spark.executorCores }} >> ${SPARK_HOME}/conf/spark-defaults.conf
    for arg in V3IO_USERNAME V3IO_PASSWORD V3IO_TENANT V3IO_ACCESS_KEY; do 
      if [ "${!arg}" != "" ]; then
        echo spark.executorEnv.${arg}=${!arg} >> ${SPARK_HOME}/conf/spark-defaults.conf
      fi
    done
{{- end }}

    mkdir -p ${HOME}/.pythonlibs
    export PIP_PREFIX="${HOME}/.pythonlibs"
    export PYTHONPATH="${HOME}/.pythonlibs/lib/python3.6/site-packages:${PYTHONPATH}"
    export PATH="${PATH}:${HOME}/.pythonlibs/bin"

    if [ "$(grep --count 'IGUAZIO CONFIG' ${HOME}/.bashrc)" == "0" ]; then
      echo "# ----- IGUAZIO CONFIG -----" >> ${HOME}/.bashrc
      echo "source ${IGUAZIO_HOME}/bash-it.sh" >> ${HOME}/.bashrc
      echo "# --- END IGUAZIO CONFIG ---" >> ${HOME}/.bashrc
    fi

    /docker-zeppelin.sh \
            --master-hostname={{ .Values.spark.hostname }} \
            --master-port={{ .Values.spark.port }}
