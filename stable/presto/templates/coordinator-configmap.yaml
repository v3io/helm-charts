apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "presto.coordinator" . }}
  labels:
    app: {{ template "presto.name" . }}
    chart: {{ template "presto.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: coordinator
data:
  node.properties: |
    node.environment={{ .Values.server.node.environment }}
    node.data-dir={{ .Values.server.node.dataDir }}

  jvm.config: |
    -server
    -Xmx{{ .Values.server.jvm.maxHeapSize }}
    -XX:+{{ .Values.server.jvm.gcMethod.type }}
    -XX:G1HeapRegionSize={{ .Values.server.jvm.gcMethod.g1.heapRegionSize }}
    -XX:+UseGCOverheadLimit
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError

  config.properties: |
    coordinator=true
{{- if gt (int .Values.server.workers) 0 }}
    node-scheduler.include-coordinator=false
{{- else }}
    node-scheduler.include-coordinator=true
{{- end }}
    http-server.http.port={{ .Values.server.config.http.port }}
{{- if .Values.server.config.https }}
    http-server.https.enabled=true
    http-server.https.port={{ .Values.server.config.https.port }}
    http-server.https.keystore.path={{ .Values.server.config.https.keystore }}
    http-server.https.keystore.key={{ .Values.server.config.https.passphrase }}
    http-server.authentication.type=PASSWORD
{{- end }}
    query.max-memory={{ .Values.server.config.query.maxMemory }}
    query.max-memory-per-node={{ .Values.server.config.query.maxMemoryPerNode }}
    discovery-server.enabled=true
    discovery.uri=http://{{ template "presto.fullname" . }}.{{ .Release.Namespace }}.svc:{{ .Values.server.config.http.port }}

{{- if .Values.server.config.https }}
  password-authenticator.properties: |
    password-authenticator.name=v3io
{{- end }}

{{ if .Values.server.log }}
  log.properties: |
{{- range $key, $val := .Values.server.log }}
{{ printf "%s=%s" $key $val | indent 4}}
{{- end }}
{{ end -}}

{{- range $key, $val := .Values.server.config.extra }}
{{ printf "%s: |" $key | indent 2 }}
{{ $val | indent 4 }}
{{- end }}

{{- if .Values.server.config.https }}
  create-cert.sh: |
    #!/bin/bash

    set -e

    echo -n "{{ .Values.server.config.https.keystoreBinary }}" | base64 --decode > {{ .Values.server.config.https.keystore }}
{{- end }}

  health_check.sh: |
{{ include "v3io-configs.script.httpHealthCheckWithJava" . | indent 4 }}

  docker-presto.sh: |
    #!/bin/bash 
    cp {{ .Values.server.config.mapPath }}/*.properties $PRESTO_CONF_DIR
    cp {{ .Values.server.config.mapPath }}/*.config $PRESTO_CONF_DIR
    launcher run

---
