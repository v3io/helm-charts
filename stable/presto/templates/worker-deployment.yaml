# Copyright 2017 Iguazio
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
{{- if gt (int .Values.server.workers) 0 }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "presto.worker" . }}
  labels:
    app: {{ template "presto.name" . }}
    chart: {{ template "presto.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: worker
spec:
  replicas: {{ .Values.server.workers }}
  selector:
    matchLabels:
      app: {{ template "presto.name" . }}
      release: {{ .Release.Name }}
      component: worker
  template:
    metadata:
      labels:
        app: {{ template "presto.name" . }}
        release: {{ .Release.Name }}
        component: worker
      annotations:
        checksum/catalog-configmap: {{ include (print $.Template.BasePath "/catalog-configmap.yaml") . | sha256sum }}
        checksum/worker-configmap: {{ include (print $.Template.BasePath "/worker-configmap.yaml") . | sha256sum }}
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "presto.worker" . }}
        - name: catalog-config-volume
          configMap:
            name: {{ template "presto.catalog" . }}
        - name: daemon-health
          emptyDir: {}
        - name: third-party-volume
          hostPath:
            path: "/home/iguazio/igz/bigdata/libs/third-party"
{{- if .Values.server.properties.hostPathVolumes }}
{{- $i := 0 | int }}
{{- range $hostPathVolume := .Values.server.properties.hostPathVolumes }}
        - name: {{ $volumeName := print "host-path-volume-" $i }}{{ $volumeName }}
          hostPath:
            path: {{ $hostPathVolume.hostPath }}
            type: Directory
{{- $i = add1 $i }}
{{- end }}
{{- end }}
{{- if .Values.server.properties.https }}
        - name: java-cert
          emptyDir: {}
{{- end }}
{{- if .Values.server.properties.worker.volumes }}
{{ include .Values.server.properties.worker.volumes.volumesTemplate . | indent 8 }}
{{- end }}
      initContainers:
        - name: daemon-health
          image: "{{ .Values.daemon.image.repository }}:{{ .Values.daemon.image.tag }}"
          imagePullPolicy: {{ .Values.daemon.image.pullPolicy }}
          command: ["/bin/bash", "/etc/config/daemon/daemon-health.sh"]
          volumeMounts:
            - mountPath: /etc/config/daemon
              name: config-volume
            - mountPath: /var/run/iguazio/daemon_health
              name: daemon-health
{{- if .Values.server.properties.https }}
        - name: {{ .Chart.Name }}-jks
          image: "{{ .Values.server.properties.https.image.repository }}:{{ .Values.server.properties.https.image.tag }}"
          imagePullPolicy: {{ .Values.server.properties.https.image.pullPolicy }}
          command: ["/bin/bash", "/opt/v3io/jks/create-cert.sh"]
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /opt/v3io/jks
              name: config-volume
            - mountPath: /var/run/iguazio/java/cert
              name: java-cert
{{- end }}
      containers:
        - name: {{ .Chart.Name }}-worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/bash", "{{ .Values.image.command }}"]
{{- if .Values.environment }}
          env:
{{ include .Values.environment.template . | indent 12 }}
{{- end }}
          volumeMounts:
            - mountPath: {{ .Values.server.properties.mapPath }}
              name: config-volume
            - mountPath: {{ .Values.server.properties.catalogMapPath }}
              name: catalog-config-volume
            - mountPath: /var/run/iguazio/daemon_health
              name: daemon-health
{{- if .Values.server.properties.https }}
            - mountPath: /var/run/iguazio/java/cert
              name: java-cert
{{- end }}
{{- if .Values.server.properties.hostPathVolumes }}
{{- $i := 0 | int }}
{{- range $hostPathVolume := .Values.server.properties.hostPathVolumes }}
            - mountPath: {{ $hostPathVolume.mountPath }}
              name: {{ $mountName := print "host-path-volume-" $i }}{{ $mountName }}
{{- $i = add1 $i }}
{{- end }}
{{- end }}
{{- if .Values.server.properties.worker.volumes }}
{{ include .Values.server.properties.worker.volumes.volumeMountsTemplate . | indent 12 }}
{{- end }}
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - {{ .Values.server.properties.mapPath }}/health_check.sh
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - {{ .Values.server.properties.mapPath }}/health_check.sh
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
{{- end }}
{{- end }}
