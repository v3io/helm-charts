{{- if eq .Values.httpDB.dbType "mysql" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mlrun.db.fullname" . }}
  labels:
    {{- include "mlrun.db.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.db.replicaCount }}
  selector:
    matchLabels:
      {{- include "mlrun.db.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mlrun.db.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.db.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.db.podSecurityContext | nindent 8 }}
      initContainers:
        - command:
            - sh
            - -c
            - chmod -R 777 /tmp/docker
          image: busybox
          imagePullPolicy: Always
          name: volume-mount-hack-before
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /tmp/docker
              name: mysql-fuse
        - name: init-mysql
          image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}"
          imagePullPolicy: {{ .Values.db.image.pullPolicy }}
          resources:
            {{- toYaml .Values.db.resources | nindent 12 }}
          env:
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: "true"
          command: ["/bin/bash", "/etc/config/mysql/init-v3io-mysql.sh"]
          securityContext:
            runAsUser: 1001
          volumeMounts:
            - name: mysql-fuse
              mountPath: "/var/lib/mysql"
            - name: mysql-config
              mountPath: /etc/config/mysql
        - command:
            - sh
            - -c
            - chmod -R 777 /tmp/docker
          image: busybox
          imagePullPolicy: Always
          name: volume-mount-hack-after
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /tmp/docker
              name: mysql-fuse
      containers:
        - name: {{ template "mlrun.name" . }}-{{ .Values.db.name }}
          securityContext:
            {{- toYaml .Values.db.securityContext | nindent 12 }}
          image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}"
          imagePullPolicy: {{ .Values.db.image.pullPolicy }}
          command: ["/bin/bash", "/etc/config/mysql/v3io-mysql.sh"]
          ports:
          - name: mysql
            containerPort: 3306
            protocol: TCP
          {{- if .Values.db.livenessProbe }}
          livenessProbe:
            {{ toYaml .Values.db.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.db.readinessProbe }}
          readinessProbe:
            {{ toYaml .Values.db.readinessProbe | nindent 12 }}
          {{- end }}
          env:
          - name: MYSQL_ALLOW_EMPTY_PASSWORD
            value: "true"
          {{- if .Values.db.extraEnv }}
          {{ toYaml .Values.db.extraEnv | nindent 10 }}
          {{- end }}
          {{- if .Values.db.envFrom }}
          envFrom:
          {{ toYaml .Values.db.envFrom | nindent 10 }}
          {{- end }}
          resources:
            {{- toYaml .Values.db.resources | nindent 12 }}
          volumeMounts:
          - name: mysql-fuse
            mountPath: "/var/lib/mysql"
          - name: mysql-config
            mountPath: /etc/config/mysql
          - name: mysql-init-scripts
            mountPath: /etc/config/mysql/init-scripts
      volumes:
        - name: mysql-init-scripts
          configMap:
            name: {{ include "mlrun.db.initConfigMapName" . }}
        - name: mysql-config
          configMap:
            name: {{ include "mlrun.db.fullname" . }}
        # Add MySQL data mount (Fuse)
        - name: mysql-fuse
          hostPath:
            type: DirectoryOrCreate
            path: /home/iguazio/mlrun-db
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.db.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.db.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
