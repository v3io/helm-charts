apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "node-feature-discovery.fullname" . }}
  labels:
{{ include "node-feature-discovery.labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
{{ include "node-feature-discovery.matchLabels" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "node-feature-discovery.labels" . | indent 8 }}
    spec:
      serviceAccountName: {{ template "node-feature-discovery.serviceAccountName" . }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - env:
{{- range $name, $value := .Values.environment.open }}
{{- if not (empty $value) }}
          - name: {{ $name | quote }}
            value: {{ $value | quote }}
{{- end }}
{{- end }}
{{- range $name, $value := .Values.environment.field }}
{{- if not ( empty $value) }}
          - name: {{ $name | quote }}
            valueFrom:
              fieldRef:
                fieldPath: {{ $value | quote }}
{{- end }}
{{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: nfd-master
          command:
            - "nfd-master"
          {{- if .Values.nfdMaster.extraArgs }}
          args:
{{ toYaml .Values.nfdMaster.extraArgs | indent 12 }}
          {{- end }}
          securityContext:
{{- toYaml .Values.securityContext | nindent 12 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
        - env:
{{- range $name, $value := .Values.environment.open }}
{{- if not (empty $value) }}
          - name: {{ $name | quote }}
            value: {{ $value | quote }}
{{- end }}
{{- end }}
{{- range $name, $value := .Values.environment.field }}
{{- if not ( empty $value) }}
          - name: {{ $name | quote }}
            valueFrom:
              fieldRef:
                fieldPath: {{ $value | quote }}
{{- end }}
{{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: nfd-worker
          command:
            - "nfd-worker"
          {{- if .Values.nfdWorker.extraArgs }}
          args:
{{ toYaml .Values.nfdWorker.extraArgs | indent 12 }}
          {{- end }}
          securityContext:
{{- toYaml .Values.securityContext | nindent 12 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - name: host-boot
              mountPath: "/host-boot"
              readOnly: true
            - name: host-os-release
              mountPath: "/host-etc/os-release"
              readOnly: true
            - name: host-sys
              mountPath: "/host-sys"
            - name: source-d
              mountPath: "/etc/kubernetes/node-feature-discovery/source.d/"
            - name: features-d
              mountPath: "/etc/kubernetes/node-feature-discovery/features.d/"
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: host-boot
          hostPath:
            path: "/boot"
        - name: host-os-release
          hostPath:
            path: "/etc/os-release"
        - name: host-sys
          hostPath:
            path: "/sys"
        - name: source-d
          hostPath:
            path: "/etc/kubernetes/node-feature-discovery/source.d/"
        - name: features-d
          hostPath:
            path: "/etc/kubernetes/node-feature-discovery/features.d/"
