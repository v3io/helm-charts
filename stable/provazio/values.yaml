dashboard:
  port: 8060
  enabled: false
  url: provazio.dev.cloud.iguazio.com # Used only for Slack notifications
  replicas: 1
  databaseName: mydatabase
  collectionName: mycollection
  certEnsurerURL: http://ensure-cert:8080
  domainSelectorURL: http://select-domain:8080
  permittedIngresses: ~
  internalNetworkCIDR: 1.1.1.1/32
  expirationCheckIntervalSeconds: 300
  artifactVersionManifestContents:

  image:
    repository: quay.io/iguazio/provazio-dashboard
    tag: 0.3.0
    pullPolicy: IfNotPresent

  # holds cloud credentials
  secretName: provazio-creds

  provisioner:
    env: dev
    type: aws
    region: us-east-1

  frontendSpec:
    environment: dev
    allow_provisioning: true
    # default_system_settings_source: spec
    # system_settings:
    #   version: 1.9_cloud_b57_20181225181152
    #   num_datanodes: 1
    #   data_cluster_placement_kind: spread
    #   data_cluster_instance_size: i3.xlarge
    #   num_appnodes: 1
    #   app_cluster_provisioner_kind: dedicated
    #   app_cluster_instance_size: m5.xlarge
    #   lifetime_in_hours: 24
    #   cert_kind: prod
    #   cidr_ip: 172.38.0.0/16
    #   subnets: 172.38.0.0/24,172.38.1.0/24,172.38.2.0/24
    #   network_kind: shared
    #   termination_protection_kind: prompt
    #   services:
    #   - grafana
    #   - nuclio_metrics
    #   - v3iod
    #   - spark
    #   - shell
    #   - presto
    #   - zeppelin
    #   - elastic


controller:
  enabled: false

  # if artifactVersionManifestContents is set, a configuration file will be created and passed
  # to the controller so that it won't try to resolve artifact versions through the standard github
  # mechanism. Instead, it will take all the artifact versions from this manifest
  artifactVersionManifestDir: "/etc/provazio/controller"
  artifactVersionManifestContents: ""

  crd:
    create: true
    kinds:
    - IguazioTenant
    - IguazioTenantAppServiceSet
  image:
    repository: quay.io/iguazio/provazio-dashboard
    tag: 0.3.0
    pullPolicy: IfNotPresent
