apiVersion: nuclio.io/v1beta1
kind: Function
metadata:
  name: {{ template "tsdb-functions.queryName" . }}
  labels:
    nuclio.io/project-name: {{ template "tsdb-functions.projectName" . }}
    app: {{ template "tsdb-functions.name" . }}
    chart: {{ template "tsdb-functions.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  build:
    codeEntryType: image
  imagePullPolicy: Never
  handler: main:Query
  image: {{ .Values.functions.query.image.repository }}:{{ .Values.functions.query.image.tag }}
  replicas: {{ .Values.functions.query.replicas }}
  runtime: golang
  readinessTimeoutSeconds: {{ .Values.functions.query.readinessTimeoutSeconds }}
  env:
  - name: QUERY_V3IO_TSDB_PATH
    value: {{ .Values.tsdb.path }}
  - name: QUERY_V3IO_URL
    value: {{ .Values.webapi.url | quote }}
  - name: QUERY_V3IO_USERNAME
    value: {{ .Values.webapi.auth.username }}
  - name: QUERY_V3IO_PASSWORD
    value: {{ .Values.webapi.auth.password }}
  - name: QUERY_V3IO_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: {{ .Values.webapi.auth.accessKeySecretName }}
        key: accessKey
        optional: true
  - name: QUERY_V3IO_CONTAINER
    value: {{ .Values.tsdb.container }}
  triggers:
    web:
      kind: http
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
      attributes:
        port: {{ .Values.functions.query.port }}
        {{- if .Values.functions.query.ingress }}
        ingresses:
          http:
            host: {{ .Values.functions.query.ingress.host }}
            paths:
            - {{ default "/query" .Values.functions.query.ingress.path }}
        {{- end }}
status:
  state: waitingForResourceConfiguration
