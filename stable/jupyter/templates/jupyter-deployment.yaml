apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "jupyter.fullname" . }}
  labels:
    app: {{ template "jupyter.name" . }}
    chart: {{ template "jupyter.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  securityContext:
    fsGroup: 1000
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ template "jupyter.name" . }}
      chart: {{ template "jupyter.chart" . }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
  template:
    metadata:
      labels:
        app: {{ template "jupyter.name" . }}
        chart: {{ template "jupyter.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      containers:
        - name: jupyter
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: ["/bin/bash", "-x", "{{ .Values.image.command }}"]
          args:
            - --ip="0.0.0.0"
            - --port={{ .Values.servicePort }}
            - --notebook-dir="{{ .Values.config.home.pathPrefix }}/{{ .Values.config.username }}"
            - --NotebookApp.default_url="/lab"
            - --disable-user-config
{{- if .Values.debug.enabled }}
            - --debug
{{- end }}
          ports:
            - containerPort: {{ .Values.servicePort }}
              name: jupyter
          resources:
{{ toYaml .Values.resources | indent 12 }}
          readinessProbe:
            httpGet:
              path: /lab
              port: {{ .Values.servicePort }}
            initialDelaySeconds: 5
          livenessProbe:
            httpGet:
              path: /lab
              port: {{ .Values.servicePort }}
            initialDelaySeconds: 90
          env:
            - name: V3IO_API
              value: {{ .Values.v3ioApi.hostname }}.{{ .Release.Namespace }}.svc:{{ .Values.v3ioApi.port }}
            - name: HOME
              value: {{ .Values.config.home.pathPrefix }}/{{ .Values.config.username }}
            - name: DATABASE_URL
              value: presto://{{ .Values.presto.hostname }}.{{ .Release.Namespace }}.svc:{{ .Values.presto.port }}/{{ .Values.presto.catalog }}
{{- if .Values.environment }}
{{ include .Values.environment.template . | indent 12 }}
{{- end }}
          volumeMounts:
            - mountPath: {{ .Values.config.home.pathPrefix }}/{{ .Values.config.username }}
              name: home
            - mountPath: /etc/config/jupyter
              name: jupyter-config
{{- if .Values.volumes }}
{{ include .Values.volumes.volumeMountsTemplate . | indent 12 }}
{{- end }}
      volumes:
        - name: home
          flexVolume:
            driver: "v3io/fuse"
            secretRef:
              name: {{ .Release.Name }}-v3io-fuse
            options:
              container: {{ .Values.config.home.container }}
              subPath: {{ .Values.config.home.pathPrefix }}/{{ .Values.config.username }}
{{- if .Values.volumes }}
{{ include .Values.volumes.volumesTemplate . | indent 8 }}
{{- end }}
        - name: jupyter-config
          configMap:
            name: {{ template "jupyter.fullname" . }}
