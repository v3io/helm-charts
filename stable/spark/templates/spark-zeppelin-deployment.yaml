apiVersion: v1
kind: Service
metadata:
  name: {{ template "zeppelin-fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-{{ .Values.Zeppelin.Component }}"
spec:
  type: NodePort
  ports:
    - port: {{ .Values.Zeppelin.ServicePort }}
      targetPort: {{ .Values.Zeppelin.ContainerPort }}
      nodePort: {{ .Values.Zeppelin.NodePort }}
  selector:
    component: "{{ .Release.Name }}-{{ .Values.Zeppelin.Component }}"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "zeppelin-fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-{{ .Values.Zeppelin.Component }}"
spec:
  replicas: {{ default 1 .Values.Zeppelin.Replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "{{ .Release.Name }}-{{ .Values.Zeppelin.Component }}"
  template:
    metadata:
      labels:
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        component: "{{ .Release.Name }}-{{ .Values.Zeppelin.Component }}"
    spec:
      containers:
        - name: {{ template "zeppelin-fullname" . }}
          image: "{{ .Values.Zeppelin.Image }}:{{ .Values.Zeppelin.ImageTag }}"
          imagePullPolicy: {{ default "Always" .Values.Master.ImagePullPolicy }}
          command: ["/bin/bash", "-x"]
          args:
            - /etc/run/init.sh
          ports:
            - containerPort: {{ .Values.Zeppelin.ContainerPort }}
          resources:
            requests:
              cpu: "{{ .Values.Zeppelin.Cpu }}"
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.Zeppelin.ContainerPort }}
            initialDelaySeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.Zeppelin.ContainerPort }}
            initialDelaySeconds: 90
          env:
            - name: MASTER
              value: "spark://{{ template "master-fullname" . }}:{{ .Values.Master.ServicePort }}"
            - name: IGZ_DATA_CONFIG_FILE
              value: /tmp/v3io.conf
            - name: CURRENT_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          volumeMounts:
            - mountPath: /etc/config
              name: config-volume
            - mountPath: /etc/run
              name: init-volume
            - mountPath: "/dev/shm"
              name: "shm"
            - mountPath: /tmp/dayman
              name: daemon-comm
{{- if .Values.Zeppelin.PreloadNotebooks.Enabled }}
            - mountPath: /tmp/notebooks
              name: notebook-volume
{{- end }}        
      volumes:
          - name: config-volume
            configMap:
              name: "{{ .Release.Name }}-spark"
          - name: init-volume
            configMap:
              name: {{ template "zeppelin-fullname" . }}
          - name: "shm"
            hostPath:
              path: "/dev/shm"
          - name: daemon-comm
            hostPath:
              path: /tmp/dayman
{{- if .Values.Zeppelin.PreloadNotebooks.Enabled }}
          - name: notebook-volume
            configMap:
              name: {{ template "zeppelin-fullname" . }}-notebooks
{{- end }}              
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ template "zeppelin-fullname" . }}"
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{ .Release.Name }}-{{ .Values.Zeppelin.Component }}"
data:
  init.sh : |
    #!/bin/bash
{{- if .Values.Zeppelin.PreloadNotebooks.Enabled }}
    for notebook in $(ls /tmp/notebooks); do 
      mkdir -p ${ZEPPELIN_HOME}/notebook/$notebook; 
      cp /tmp/notebooks/$notebook ${ZEPPELIN_HOME}/notebook/$notebook/note.json; 
    done
{{- end }}
    /docker-zeppelin.sh --config=/etc/config \
            --master-hostname={{ template "master-fullname" . }} \
            --master-port={{.Values.Master.ServicePort}} \
            --host-ip=$(curl --silent {{ template "spark.registry" . }}/$CURRENT_NODE_IP)
    