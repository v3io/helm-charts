apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "spark.master-name" . }}
  labels:
    app: {{ template "spark.name" . }}
    chart: {{ template "spark.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: spark-master
spec:
  replicas: {{ .Values.master.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      chart: {{ template "spark.chart" . }}
      component: spark-master
  template:
    metadata:
      labels:
        app: {{ template "spark.name" . }}
        chart: {{ template "spark.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        component: spark-master
      annotations:
        srcd.host/create-headless-service: "true"
    spec:
      initContainers:
        - name: daemon-health
          image: "{{ .Values.daemon.image.repository }}:{{ .Values.daemon.image.tag }}"
          imagePullPolicy: {{ .Values.daemon.image.pullPolicy }}
          command: ["/bin/bash", "/etc/config/daemon/daemon-health.sh"]
          volumeMounts:
            - mountPath: /etc/config/daemon
              name: spark-master-config
            - mountPath: /var/run/iguazio/daemon_health
              name: daemon-health
      containers:
        - name: {{ template "spark.master-name" . }}
          image: {{ .Values.master.image.repository }}:{{ .Values.master.image.tag }}
          imagePullPolicy: {{ .Values.master.image.pullPolicy | quote }}
          volumeMounts:
            - mountPath: /etc/config/spark
              name: spark-master-config
            - mountPath: /var/run/iguazio/daemon_health
              name: daemon-health
{{- if .Values.debug.enabled }}
            - mountPath: /spark/conf
              name: spark-debug-config
{{- end }}
{{- if .Values.volumes }}
{{ include .Values.volumes.master.volumeMountsTemplate . | indent 12 }}
{{- end }}
          command: ["/bin/bash", "{{ .Values.master.image.command }}"]
          ports:
            - containerPort: {{ .Values.master.containerPort }}
            - containerPort: {{ .Values.master.webAdmin.containerPort }}
            - containerPort: {{ .Values.master.restApi.containerPort }}
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - /etc/config/spark/health_check.sh
              - --port={{ .Values.master.webAdmin.containerPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - /etc/config/spark/health_check.sh
              - --port={{ .Values.master.webAdmin.containerPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          resources:
{{ toYaml .Values.master.resources | indent 12 }}
{{- if .Values.environment }}
          env:
{{ include .Values.environment.template . | indent 12 }}
{{- range $key, $value := .Values.environment.master }}
            - name: {{ $key }}
              value: {{ $value }}
{{- end }}
{{- end }}
        - name: spark-ui-proxy
          image: {{ .Values.master.uiProxy.image.repository }}:{{ .Values.master.uiProxy.image.tag }}
          imagePullPolicy: {{ .Values.master.uiProxy.image.pullPolicy | quote }}
          ports:
            - containerPort: {{ .Values.master.uiProxy.containerPort }}
          args:
            - localhost:{{ .Values.master.webAdmin.servicePort }}
            - "{{ .Values.master.uiProxy.containerPort }}"
          resources:
{{ toYaml .Values.master.uiProxy.resources | indent 12 }}
          livenessProbe:
              httpGet:
                path: /healthz
                port: {{ .Values.master.uiProxy.containerPort }}
              initialDelaySeconds: 120
              timeoutSeconds: 5
          readinessProbe:
              httpGet:
                path: /healthz
                port: {{ .Values.master.uiProxy.containerPort }}
              initialDelaySeconds: 120
              timeoutSeconds: 5
      volumes:
{{- if .Values.volumes }}
{{ include .Values.volumes.master.volumesTemplate . | indent 8 }}
{{- end }}
        - name: daemon-health
          emptyDir: {}
        - name: spark-master-config
          configMap:
            name: {{ template "spark.master-name" . }}
{{- if .Values.debug.enabled }}
        - name: spark-debug-config
          configMap:
            name: {{ .Release.Name }}-spark-debug-config
{{- end }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
