# Copyright 2017 Iguazio
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "spark.worker-name" . }}
  labels:
    app: {{ template "spark.name" . }}
    chart: {{ template "spark.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: spark-worker
spec:
  replicas: {{ .Values.worker.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      chart: {{ template "spark.chart" . }}
      component: spark-worker
  template:
    metadata:
      labels:
        app: {{ template "spark.name" . }}
        chart: {{ template "spark.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        component: spark-worker
      annotations:
        srcd.host/create-headless-service: "true"
    spec:
      initContainers:
        - name: daemon-health
          image: "{{ .Values.daemon.image.repository }}:{{ .Values.daemon.image.tag }}"
          imagePullPolicy: {{ .Values.daemon.image.pullPolicy }}
          command: ["/bin/bash", "/etc/config/daemon/daemon-health.sh"]
          volumeMounts:
            - mountPath: /etc/config/daemon
              name: spark-worker-config
            - mountPath: /var/run/iguazio/daemon_health
              name: daemon-health
      containers:
        - name: {{ template "spark.worker-name" . }}
          image: {{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag }}
          imagePullPolicy: {{ .Values.worker.image.pullPolicy | quote }}
          volumeMounts:
            - mountPath: /etc/config/spark
              name: spark-worker-config
            - mountPath: /var/run/iguazio/daemon_health
              name: daemon-health
{{- if .Values.debug.enabled }}
            - mountPath: /spark/conf
              name: spark-debug-config
{{- end }}
{{- if .Values.volumes }}
{{ include .Values.volumes.worker.volumeMountsTemplate . | indent 12 }}
{{- end }}
          command: ["/bin/bash", "{{ .Values.worker.image.command }}"]
          ports:
            - containerPort: {{ .Values.worker.containerPort }}
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - /etc/config/spark/health_check.sh
              - --port={{ .Values.master.webAdmin.containerPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - /etc/config/spark/health_check.sh
              - --port={{ .Values.master.webAdmin.containerPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: 5
          resources:
{{ toYaml .Values.worker.resources | indent 12 }}
{{- if .Values.environment }}
          env:
{{ include .Values.environment.template . | indent 12 }}
{{- range $key, $value := .Values.environment.worker }}
            - name: {{ $key }}
              value: {{ $value }}
{{- end }}
{{- end }}
      volumes:
{{- if .Values.volumes }}
{{ include .Values.volumes.worker.volumesTemplate . | indent 8 }}
{{- end }}
        - name: daemon-health
          emptyDir: {}
        - name: spark-worker-config
          configMap:
            name: {{ template "spark.worker-name" . }}
{{- if .Values.debug.enabled }}
        - name: spark-debug-config
          configMap:
            name: {{ .Release.Name }}-spark-debug-config
{{- end }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
{{- end }}
