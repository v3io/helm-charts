{{- if .Values.deployment.create }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metadata-grpc-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    component: metadata-grpc-server
{{ include "pipelines.commonLabels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: metadata-grpc-server
{{ include "pipelines.commonLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        component: metadata-grpc-server
{{ include "pipelines.commonLabels" . | indent 8 }}
    spec:
      initContainers:
      - name: metadata-init
        env:
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: metadata-mysql-configmap
              key: MYSQL_DATABASE
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              name: metadata-mysql-configmap
              key: MYSQL_HOST
        - name: MYSQL_PORT
          valueFrom:
            configMapKeyRef:
              name: metadata-mysql-configmap
              key: MYSQL_PORT
        command: [
          'mysqladmin',
          'status',
          '--host=$(MYSQL_HOST)',
          '--port=$(MYSQL_PORT)',
          '--wait=10',
        ]
        image: {{ .Values.images.metadata.init.repository }}:{{ .Values.images.metadata.init.tag }}
        imagePullPolicy: {{ .Values.images.imagePullPolicy }}
      containers:
      - name: metadata-container
        image: {{ .Values.images.metadata.container.repository }}:{{ .Values.images.metadata.container.tag }}
        imagePullPolicy: {{ .Values.images.imagePullPolicy }}
        env:
#        - name: DBCONFIG_USER
#          valueFrom:
#            secretKeyRef:
#              name: mysql-credential
#              key: username
#        - name: DBCONFIG_PASSWORD
#          valueFrom:
#            secretKeyRef:
#              name: mysql-credential
#              key: password
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: metadata-mysql-configmap
              key: MYSQL_DATABASE
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              name: metadata-mysql-configmap
              key: MYSQL_HOST
        - name: MYSQL_PORT
          valueFrom:
            configMapKeyRef:
              name: metadata-mysql-configmap
              key: MYSQL_PORT
        command: ["/bin/metadata_store_server"]
        args: [
          "--enable_database_upgrade",
          "--grpc_port=8080",
          "--mysql_config_database=$(MYSQL_DATABASE)",
          "--mysql_config_host=$(MYSQL_HOST)",
          "--mysql_config_port=$(MYSQL_PORT)",
#          "--mysql_config_user=$(DBCONFIG_USER)",
#          "--mysql_config_password=$(DBCONFIG_PASSWORD)"
        ]
        ports:
        - name: grpc-api
          containerPort: 8080
        livenessProbe:
          tcpSocket:
            port: grpc-api
          initialDelaySeconds: 3
          periodSeconds: 5
          timeoutSeconds: 2
        readinessProbe:
          tcpSocket:
            port: grpc-api
          initialDelaySeconds: 3
          periodSeconds: 5
          timeoutSeconds: 2
        resources:
{{ toYaml .Values.resources.metadata | indent 10 }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- end }}
