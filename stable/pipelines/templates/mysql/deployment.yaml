{{- if .Values.deployment.create }}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: mysql-kf
  labels:
    component: mysql-kf
{{ include "pipelines.commonLabels" . | indent 4 }}
spec:
  selector:
    matchLabels:
      component: mysql-kf
{{ include "pipelines.commonLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        component: mysql-kf
{{ include "pipelines.commonLabels" . | indent 8 }}
    spec:
      volumes:
        - name: mysql-init-scripts
          configMap:
            name: mysql-init-scripts
        - name: mysql-config
          configMap:
            name: mysql-kf
        # Add MySQL data mount (Fuse)
        - name: mysql-fuse
          flexVolume:
            driver: "v3io/fuse"
            options:
              container: {{ .Values.storage.metadata.containerName }}
              subPath: {{ .Values.storage.metadata.subPath }}
              accessKey: {{ .Values.configurations.credentials.accessKey }}
      initContainers:
        - name: init-mysql
          image: {{ .Values.images.mysql.repository }}:{{ .Values.images.mysql.tag }}
          imagePullPolicy: {{ .Values.images.imagePullPolicy }}
          resources:
{{ toYaml .Values.resources.mysql | indent 12 }}
          env:
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: "true"
          command: ["/bin/bash", "/etc/config/mysql/init-v3io-mysql.sh"]
          securityContext:
            runAsUser: 1001
          volumeMounts:
            - name: mysql-fuse
              mountPath: "/var/lib/mysql"
            - name: mysql-config
              mountPath: /etc/config/mysql
      containers:
      - name: {{ .Values.configurations.mysql.spec.template.spec.containers.name }}
        image: {{ .Values.images.mysql.repository }}:{{ .Values.images.mysql.tag }}
        imagePullPolicy: {{ .Values.images.imagePullPolicy }}
        command: ["/bin/bash", "/etc/config/mysql/v3io-mysql.sh"]
        ports:
        - name: mysql
          containerPort: 3306
          protocol: TCP
        livenessProbe:
          exec:
            command: ["/bin/bash", "/etc/config/mysql/health_check.sh"]
          initialDelaySeconds: {{ .Values.configurations.mysql.spec.template.spec.containers.livenessProbe.initialDelaySeconds }}
          failureThreshold: {{ .Values.configurations.mysql.spec.template.spec.containers.livenessProbe.failureThreshold }}
          periodSeconds: {{ .Values.configurations.mysql.spec.template.spec.containers.livenessProbe.periodSeconds }}
        readinessProbe:
          exec:
            command: ["/bin/bash", "/etc/config/mysql/health_check.sh"]
          initialDelaySeconds: {{ .Values.configurations.mysql.spec.template.spec.containers.readinessProbe.initialDelaySeconds }}
          failureThreshold: {{ .Values.configurations.mysql.spec.template.spec.containers.readinessProbe.failureThreshold }}
          periodSeconds: {{ .Values.configurations.mysql.spec.template.spec.containers.readinessProbe.periodSeconds }}
        env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "true"
        volumeMounts:
        - name: mysql-fuse
          mountPath: "/var/lib/mysql"
        - name: mysql-config
          mountPath: /etc/config/mysql
        - name: mysql-init-scripts
          mountPath: /etc/config/mysql/init-scripts
        resources:
{{ toYaml .Values.resources.mysql | indent 10 }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- end }}
