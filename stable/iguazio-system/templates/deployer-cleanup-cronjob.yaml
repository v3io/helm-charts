{{- if .Values.job.deployerCleanup.enabled -}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ template "iguazio-system.name" . }}-deployer-cleanup
  namespace: {{ .Values.tenant.name }}
  labels:
    app: {{ template "iguazio-system.name" . }}
    chart: {{ template "iguazio-system.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  schedule: {{ .Values.job.deployerCleanup.schedule | quote }}
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ template "iguazio-system.namespace-admin.name" . }}
          containers:
          - name: cleaner
            image: {{ .Values.job.deployerCleanup.image.repository }}:{{ .Values.job.deployerCleanup.image.tag }}
            command: ["/bin/sh", "-c"]
            args:
            - |
                for ns in $(kubectl get namespace --selector {{ .Values.job.deployerCleanup.selector }}=expired --output=custom-columns=Name:.metadata.name --no-headers); do
                  kubectl delete namespace --force $ns
                done;
                for ns in $(kubectl get namespace --selector {{ .Values.job.deployerCleanup.selector }}=marked --output=custom-columns=Name:.metadata.name --no-headers); do
                  kubectl label namespace --overwrite $ns {{ .Values.job.deployerCleanup.selector }}=expired
                done;
                for ns in $(kubectl get namespace --selector {{ .Values.job.deployerCleanup.selector }}=provisioned --output=custom-columns=Name:.metadata.name --no-headers); do
                  kubectl label namespace --overwrite $ns {{ .Values.job.deployerCleanup.selector }}=marked
                done;
          restartPolicy: OnFailure
{{- end -}}
