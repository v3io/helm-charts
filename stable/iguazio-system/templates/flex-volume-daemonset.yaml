{{- if .Values.job.flexVolume.enabled -}}
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ template "iguazio-system.flex-volume.name" . }}
  namespace: {{ .Values.tenant.name }}
  labels:
    app: {{ template "iguazio-system.name" . }}
    chart: {{ template "iguazio-system.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: flex-volume-plugin
spec:
  selector:
    matchLabels:
      chart: {{ template "iguazio-system.chart" . }}
      component: flex-volume-plugin
  template:
    metadata:
      labels:
        app: {{ template "iguazio-system.name" . }}
        chart: {{ template "iguazio-system.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        component: flex-volume-plugin
      annotations:
        # Mark this pod as a critical add-on; when enabled, the critical add-on scheduler
        # reserves resources for critical add-on pods so that they can be rescheduled after
        # a failure.  This annotation works in tandem with the toleration below.
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      # Allow this pod to be rescheduled while the node is in "critical add-ons only" mode.
      # This, along with the annotation above marks this pod as a critical add-on.
      - key: CriticalAddonsOnly
        operator: Exists
      securityContext:
        runAsUser: 0
        fsGroup: 0
      containers:
        - name: v3io-fuse
          image: {{ .Values.job.flexVolume.image.repository }}:{{ .Values.job.flexVolume.image.tag }}
          imagePullPolicy: {{ .Values.job.flexVolume.image.pullPolicy | quote }}
          env:
{{- if .Values.job.flexVolume.environment.extra }}
{{- range $name, $val := .Values.job.flexVolume.environment.extra }}
            - name: {{ $name }}
              value: {{ $val | quote }}
{{- end }}
{{- end }}
          volumeMounts:
            - mountPath: /flexmnt
              name: flexvolume-mount
            - mountPath: /etc/config/v3io
              name: cfg
            - mountPath: /etc/v3io/fuse
              name: etc
          securityContext:
            privileged: true
      volumes:
        - name: flexvolume-mount
          hostPath:
            path: "{{ .Values.job.flexVolume.hostPaths.v3ioFuse }}"
        - name: etc
          hostPath:
            path: "{{ .Values.job.flexVolume.hostPaths.fuseConfig }}"
        - name: cfg
          configMap:
            name: {{ template "iguazio-system.flex-volume.name" . }}
{{- end -}}
