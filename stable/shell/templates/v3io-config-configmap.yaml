apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-v3io-config
  labels:
    app: {{ template "shell.name" . }}
    chart: {{ template "shell.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
{{ include "v3io-configs.java.configMap" . | indent 2 }}

  health_check.sh: |
{{ include "v3io-configs.script.javaHealthCheck" . | indent 4 }}

  v3io-shell.sh: |
    #!/usr/bin/env bash
    set -e

{{ include "v3io-configs.script.lookupService" . | indent 4 }}

{{- if and .Values.v3io.tsdbctl .Values.v3io.tsdbctl.download }}
    curl -sSL -o ${IGUAZIO_HOME}/bin/tsdbctl {{ .Values.v3io.tsdbctl.download }}
    chmod +x ${IGUAZIO_HOME}/bin/tsdbctl
{{- end }}

{{- if .Values.spark }}
    echo "spark.master=spark://{{ .Values.spark.hostname }}:{{ .Values.spark.port }}" >> ${SPARK_HOME}/conf/spark-defaults.conf
    echo spark.driver.host=$(hostname -i) >> ${SPARK_HOME}/conf/spark-defaults.conf
    echo spark.executor.cores={{ .Values.spark.executorCores }} >> ${SPARK_HOME}/conf/spark-defaults.conf
    for arg in V3IO_USERNAME V3IO_PASSWORD V3IO_TENANT V3IO_ACCESS_KEY; do 
      if [ "${!arg}" != "" ]; then
        echo spark.executorEnv.${arg}=${!arg} >> ${SPARK_HOME}/conf/spark-defaults.conf
      fi
    done
{{- end }}

{{- if .Values.presto }}
    echo alias prestow=\"presto-cli --server {{ .Values.presto.hostname }}.{{ .Release.Namespace }}.svc:{{ .Values.presto.port }} \$@\" >> ${HOME}/.presto_alias
    echo alias presto=\"prestow --catalog=v3io \$@\" >> ${HOME}/.presto_alias
    if [ "$(grep --count 'PRESTO CONFIG' ${HOME}/.bashrc)" == "0" ]; then
      echo "# ----- PRESTO CONFIG -----" >> ${HOME}/.bashrc
      echo "source ${HOME}/.presto_alias" >> ${HOME}/.bashrc
      echo "# --- END PRESTO CONFIG ---" >> ${HOME}/.bashrc
    fi
{{- end }}

    echo "echo ''" >> ~/.bashrc
{{- if .Values.config.logo }}
    if [ "$(grep --count 'LOGO CONFIG' ${HOME}/.bashrc)" == "0" ]; then
      echo "# ----- LOGO CONFIG -----" >> ${HOME}/.bashrc
      echo "echo ''" >> ${HOME}/.bashrc
      echo "echo {{ .Values.config.logo }} | base64 --decode" >> ${HOME}/.bashrc
      echo "echo ''" >> ${HOME}/.bashrc
      echo "echo ''" >> ${HOME}/.bashrc
      echo "# --- END LOGO CONFIG ---" >> ${HOME}/.bashrc
    fi
{{- end }}
{{- if .Values.config.welcome }}
    if [ "$(grep --count 'WELCOME CONFIG' ${HOME}/.bashrc)" == "0" ]; then
      echo "# ----- WELCOME CONFIG -----" >> ${HOME}/.bashrc
      echo "toilet --font smmono9 --termwidth --filter metal {{ .Values.config.welcome }}" >> ${HOME}/.bashrc
      echo "echo ''" >> ${HOME}/.bashrc
      echo "# ----- WELCOME CONFIG -----" >> ${HOME}/.bashrc
    fi
{{- end }}

    mkdir -p ${HOME}/.pythonlibs
    export PIP_PREFIX="${HOME}/.pythonlibs"
    export PYTHONPATH="${HOME}/.pythonlibs/lib/python3.6/site-packages:${PYTHONPATH}"
    export PATH="${PATH}:${HOME}/.pythonlibs/bin"

    if [ "$(grep --count 'IGUAZIO CONFIG' ${HOME}/.bashrc)" == "0" ]; then
      echo "# ----- IGUAZIO CONFIG -----" >> ${HOME}/.bashrc
      echo "source ${IGUAZIO_HOME}/bash-it.sh" >> ${HOME}/.bashrc
      echo "# --- END IGUAZIO CONFIG ---" >> ${HOME}/.bashrc
    fi

    ttyd bash
