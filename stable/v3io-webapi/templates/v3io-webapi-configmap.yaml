apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "v3io-webapi.name" . }}
  labels:
    app: {{ template "v3io-webapi.name" . }}
    chart: {{ template "v3io-webapi.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  init.sh: |
    #!/usr/bin/env bash
    set -e
    ulimit -S -H -l unlimited
    ulimit -S -H -c unlimited
    ulimit -a -S
    ulimit -a -H
    echo {{ .Values.numHugePages }} > /proc/sys/vm/nr_hugepages
    {{- if .Values.user.create }}
      {{- if or (not .Values.user.uid) (le (int .Values.user.uid) 1000) }}
      {{- $uid := add 3000 (randNumeric 4) }}
    useradd --no-create-home --uid {{ $uid }} {{ .Values.user.name }}
      {{- else }}
      {{- $uid := int .Values.user.uid }}
    useradd --no-create-home --uid {{ $uid }} {{ .Values.user.name }}
      {{- end }}
    {{- end }}
    mkdir -p {{ .Values.installationPath }}/lib/logs
    
    chown -R {{ .Values.user.name }}:{{ .Values.user.name }} /dev/shm
    chown -R {{ .Values.user.name }}:{{ .Values.user.name }} {{ .Values.installationPath }}/lib/logs
    chown -R {{ .Values.user.name }}:{{ .Values.user.name }} /tmp
    chown -R {{ .Values.user.name }}:{{ .Values.user.name }} /var/crash

    su --preserve-environment \
      --login {{ .Values.user.name }} \
      --command "ulimit -c unlimited && {{ .Values.installationPath }}/bin/nginx -p {{ .Values.installationPath }}/lib -c /etc/iguazio/nginx/nginx.conf && tail -f {{ .Values.installationPath }}/lib/logs/v3io.log"

  health_check.sh: |
{{ include "v3io-configs.script.httpHealthCheck" . | indent 4 }}

  nginx.conf: |
    worker_processes {{ .Values.workerProcesses }};
    load_module ngx_http_v3io_module.so;
    error_log {{ .Values.installationPath }}/lib/logs/v3io.log info;
    events {
        use epoll;
        worker_connections  {{ .Values.workerConnections }};
        multi_accept on;
    }
    http {
        include       {{ .Values.installationPath }}/conf/mime.types;
        default_type  application/octet-stream;
        sendfile            on;
        tcp_nopush          on;
        tcp_nodelay         on;
        keepalive_timeout   65;
        server {
            listen       {{ .Values.sslHostPort }} ssl;
            ssl    on;
            ssl_certificate        {{ .Values.installationPath }}/crt/iguazio-nginx.crt;
            ssl_certificate_key    {{ .Values.installationPath }}/crt/iguazio-nginx.key;
            client_body_buffer_size   10M;
            client_max_body_size      5G;
{{- if .Values.logger.enableAccessLog }}
            access_log on;
{{- else }}
            access_log off;
{{- end }}  
            location / {
                set $cors "1";
                if ($request_method = 'OPTIONS') {
                    set $cors "${cors}o";
                }
                if ($cors = "1") {
                    add_header      'Access-Control-Allow-Origin' '$http_origin';
                    add_header      'Access-Control-Allow-Credentials' 'true';
                    root            /root/ctnr;
                    set $v3io_key   "$uri?$args";
{{- range $index, $datanode := .Values.datanodes }}
                    v3io_pass       {{ $datanode.uri | quote }};
{{- end }}
                    v3io_md5_mode   disable;
                }
                if ($cors = "1o") {
                    add_header 'Access-Control-Allow-Origin' '$http_origin';
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                    add_header 'Access-Control-Allow-Credentials' 'true';
                    add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Content-Disposition,Accept,Cache-Control,X-v3io-function,X-v3io-session-key,Access-Control-Allow-Origin';
                    add_header 'Content-Length' '0';
                    add_header 'Content-Type' 'text/plain';
                    return 204;
                }
            }
        }
        server {
            listen                    {{ .Values.hostPort }};
            server_name               localhost;
            client_body_buffer_size   10M;
            client_max_body_size      5G;
{{- if .Values.logger.enableAccessLog }}
            access_log on;
{{- else }}
            access_log off;
{{- end }}
            location / {
                set $cors "1";
                # OPTIONS indicates a CORS pre-flight request
                if ($request_method = 'OPTIONS') {
                    set $cors "${cors}o";
                }
                # Append CORS headers to any request from
                # allowed CORS domain, except OPTIONS
                if ($cors = "1") {
                    add_header     'Access-Control-Allow-Origin' '$http_origin';
                    add_header     'Access-Control-Allow-Credentials' 'true';
                    root            /root/ctnr;
                    set $v3io_key   "$uri?$args";
{{- range $index, $datanode := .Values.datanodes }}
                    v3io_pass       {{ $datanode.uri | quote }};
{{- end }}
                    v3io_md5_mode   disable;
                }
                # OPTIONS (pre-flight) request from allowed
                # CORS domain. return response directly
                if ($cors = "1o") {
                    add_header 'Access-Control-Allow-Origin' '$http_origin';
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                    add_header 'Access-Control-Allow-Credentials' 'true';
                    add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Content-Disposition,Accept,Cache-Control,X-v3io-function,X-v3io-session-key,Access-Control-Allow-Origin';
                    add_header 'Content-Length' '0';
                    add_header 'Content-Type' 'text/plain';
                    return 204;
                }
            }
        }
    }
